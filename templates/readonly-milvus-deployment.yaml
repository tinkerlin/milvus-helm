{{- if .Values.cluster.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "milvus.readonly.fullname" . }}
  labels:
{{ include "milvus.labels" . | indent 4 }}
    component: "readonly"
spec:
  replicas: {{ .Values.readonlyMilvus.replicas }}
  selector:
    matchLabels:
{{ include "milvus.matchLabels" . | indent 6 }}
      component: "readonly"
  template:
    metadata:
      labels:
{{ include "milvus.matchLabels" . | indent 8 }}
        component: "readonly"
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/config.yaml") . | sha256sum }}
{{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
    spec:
      {{- if .Values.mysql.enabled }}
      initContainers:
      - name: "wait-for-mysql"
        image: "{{ .Values.initContainerImage }}"
        command:
        - 'sh'
        - '-c'
        - >
          until nc -z -w 2 {{ .Release.Name }}-mysql 3306 && echo mysql database ok; do
            sleep 2;
          done;
      {{- end }}
{{- if .Values.extraInitContainers }}
{{ toYaml .Values.extraInitContainers | indent 6 }}
{{- end }}
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
      {{- range .Values.image.pullSecrets }}
        - name: {{ . }}
      {{- end}}
      {{- end }}
      containers:
      - name: milvus
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
          - name: engine
            containerPort: 19530
            protocol: TCP
          - name: web
            containerPort: 19121
            protocol: TCP
        livenessProbe:
{{ toYaml .Values.livenessProbe | indent 10 }}
        readinessProbe:
{{ toYaml .Values.readinessProbe | indent 10 }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        volumeMounts:
        {{- if .Values.persistence.enabled }}
        - name: milvus-data-disk
          mountPath: "{{ .Values.primaryPath }}/db"
          subPath: {{ .Values.persistence.persistentVolumeClaim.subPath | default "" }}
        {{- end }}
        {{- if .Values.logsPersistence.enabled }}
        - name: milvus-logs-disk
          mountPath: {{ .Values.logs.path }}
          subPath: {{ .Values.logsPersistence.persistentVolumeClaim.subPath | default "" }}
        {{- end }}
        - name: milvus-configmap
          mountPath: /var/lib/milvus/conf/server_config.yaml
          subPath: readonly_server_config.yaml
        {{- with .Values.extraVolumeMounts }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.extraContainers }}
{{ tpl . $ | indent 6 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
      - name: milvus-configmap
        configMap:
          name: {{ template "milvus.fullname" . }}
      {{- if .Values.persistence.enabled }}
      - name: milvus-data-disk
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.persistentVolumeClaim.existingClaim | default (include "milvus.fullname" .) }}
      {{- end }}
      {{- if .Values.logsPersistence.enabled }}
      - name: milvus-logs-disk
        persistentVolumeClaim:
          claimName: {{ .Values.logsPersistence.persistentVolumeClaim.existingClaim | default printf "%s-logs" (include "milvus.fullname" . | trunc 58) }}
      {{- end }}
      {{- with .Values.extraVolumes }}
        {{- toYaml . | nindent 6 }}
      {{- end }}
{{- end }}
